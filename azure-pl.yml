# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

schedules:
- cron: "20 2 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

variables:
  owwebdocs_depth: 10
  owproject: open-watcom/open-watcom-v2
  owroot:    $(Pipeline.Workspace)/ow2
  owrelroot: $(Pipeline.Workspace)/rel
  owobjdir:  binbuild
  owtools:   GCC
  owpattern: ${{ 'Azure Pipelines build' }}
  owcond:    ''

jobs:
- job: build
  displayName: "Wiki Docs Build"
  strategy:
    matrix:
      Html:
        owdoctarget: html
      PDF:
        owdoctarget: pdf
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: owcond.yml
  - script: |
      # configure Git client
      git config --global user.email "openwatcomazure@gmail.com"
      git config --global user.name "Open Watcom Azure"
      # get latest OW sources
      git clone --depth=1 --branch=master https://github.com/$(owproject).git $(owroot)
    displayName: "Clone OW git repository"
    condition: variables['owcond']
  - script: |
      for i in {1..10}
      do
        sudo apt-get install -y dosbox
        if [ $? = 0 ]; then
          break
        fi
      done
    displayName: "Install DOSBOX"
    condition: variables['owcond']
  - script: ./buildx.sh
    displayName: "Build Wiki Docs"
    condition: variables['owcond']
  - task: PublishPipelineArtifact@1
    displayName: Save Artifact wiki$(owdoctarget)
    inputs: 
      artifactName: wiki$(owdoctarget)
      targetPath: $(owrelroot)
    condition: variables['owcond']
- job: update
  displayName: "Wiki Docs Update"
  dependsOn: build
  steps:
  - checkout: self
    persistCredentials: true
  - template: owcond.yml
  - script: |
      # configure Git client
      git config --global user.email "openwatcomazure@gmail.com"
      git config --global user.name "Open Watcom Azure"
    condition: variables['owcond']
  - task: DownloadPipelineArtifact@2
    displayName: Load Artifact wikihtml
    inputs:
      buildType: 'current'
      artifactName: wikihtml
      targetPath: docs
    condition: variables['owcond']
  - task: DownloadPipelineArtifact@2
    displayName: Load Artifact wikipdf
    inputs:
      buildType: 'current'
      artifactName: wikipdf
      targetPath: docs
    condition: variables['owcond']
  - script: |
      # push updated files to repository
      # warning: repository is in detached HEAD mode
      set -x
      git add -v -f .
      if [ -n "$(git status -uno --porcelain)" ]; then
        git commit -v -m "$(owpattern) $(Build.BuildNumber)"
        git checkout -b temp
        #git checkout -B master temp
        git checkout master
        git merge temp
        git branch -d temp
        if [ `git rev-list HEAD --count` -gt $(owwebdocs_depth) ]; then
          echo "start repository compression"
          git checkout --orphan temp1
          git add -v -A
          git commit -v -am "$(owpattern) $(Build.BuildNumber)"
          git branch -v -D master
          git branch -v -m master
          echo "end repository compression"
        fi
        git push -v -f origin master
      fi
    displayName: Update Wiki repository
    condition: variables['owcond']
